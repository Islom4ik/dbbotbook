const { Telegraf, 
    Markup,
    session
} = require('telegraf');
require('dotenv').config()


const bot = new Telegraf(process.env.BOT_TOKEN);
const { MongoClient, ObjectId } = require('mongodb');
const url = process.env.DB;
const client = new MongoClient(url);
client.connect();
const db = client.db('bot');
const collection = db.collection('books');
bot.use(session());

bot.use((ctx,next)=>{
    if (typeof ctx.session === 'undefined'){
        ctx.session = {}
        
    }
    next()
})

bot.start((ctx) => ctx.replyWithHTML(`üìö <b>–ì–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω—ã–µ –∫–Ω–∏–≥–∏:</b>\n1. –õ–∏—Ç–µ—Ä–∞—Ç—É—Ä–∞ 1 —á–∞—Å—Ç—å \n2. –õ–∏—Ç–µ—Ä–∞—Ç—É—Ä–∞ 2 —á–∞—Å—Ç—å \n3. –ê–ª–≥–µ–±—Ä–∞ \n4. –ì–µ–æ–º–µ—Ç—Ä–∏—è \n5. –ë–∏–æ–ª–æ–≥–∏—è \n6. –ß–µ—Ä—á–µ–Ω–∏–µ \n7. –§–∏–∑–∏–∫–∞ \n8. –ò–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞(—É—á–µ–±–Ω–∏–∫) \n9. –ò–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞(–º–µ—Ç–æ–¥–∏–∫–∞) \n10. –í–æ—Å–ø–∏—Ç–∞–Ω–∏–µ \n11. –≠–∫–æ–Ω–æ–º–∏–∫–∞ \n12. –ì–µ–æ–≥—Ä–∞—Ñ–∏—è \n13. –í—Å–µ–º–∏—Ä–Ω–∞—è –ò—Å—Ç–æ—Ä–∏—è \n14. –•–∏–º–∏—è \n15. –û–ö–ü(–û—Å–Ω–æ–≤—ã –ö–æ–Ω—Å—Ç–∏—Ç—É—Ü–∏–æ–Ω–Ω–æ–≥–æ –ü—Ä–∞–≤–∞) \n16. –ò–ù–ù(–ò–¥–µ—è –ù–∞—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–π –ù–µ–∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏) \n17. –£–∑–±–µ–∫—Å–∫–∏–π –Ø–∑—ã–∫ \n18. –ò—Å—Ç–æ—Ä–∏—è –£–∑–±–µ–∫–∏—Å—Ç–∞–Ω–∞ \n19. –†—É—Å—Å–∫–∏–π –Ø–∑—ã–∫ \n20. –¢–µ—Ö–Ω–æ–ª–æ–≥–∏—è\n\nüìö <b>–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∫–Ω–∏–≥–∏:</b>\n- Mindset\n- 4000 Essential Words 4`, Markup.inlineKeyboard(
    [
        [Markup.button.callback('1', 'b1'), Markup.button.callback('2', 'b2'), Markup.button.callback('3', 'b3'), Markup.button.callback('4', 'b4'), Markup.button.callback('5', 'b5')],
        [Markup.button.callback('6', 'b6'), Markup.button.callback('7', 'b7'), Markup.button.callback('8', 'b8'), Markup.button.callback('9', 'b9'), Markup.button.callback('10', 'b10')],
        [Markup.button.callback('11', 'b11'), Markup.button.callback('12', 'b12'), Markup.button.callback('13', 'b13'), Markup.button.callback('14', 'b14'), Markup.button.callback('15', 'b15')],
        [Markup.button.callback('16', 'b16'), Markup.button.callback('17', 'b17'), Markup.button.callback('18', 'b18'), Markup.button.callback('19', 'b19'), Markup.button.callback('20', 'b20')],
        [Markup.button.callback('MINDSET', 'MS')],
        [Markup.button.callback('4000EW', 'FF')]
    ]
)));

bot.launch({dropPendingUpdates: true});

bot.command('books', async (ctx) => {
    try {
        await ctx.replyWithHTML(`üìö <b>–ì–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω—ã–µ –∫–Ω–∏–≥–∏:</b>\n1. –õ–∏—Ç–µ—Ä–∞—Ç—É—Ä–∞ 1 —á–∞—Å—Ç—å \n2. –õ–∏—Ç–µ—Ä–∞—Ç—É—Ä–∞ 2 —á–∞—Å—Ç—å \n3. –ê–ª–≥–µ–±—Ä–∞ \n4. –ì–µ–æ–º–µ—Ç—Ä–∏—è \n5. –ë–∏–æ–ª–æ–≥–∏—è \n6. –ß–µ—Ä—á–µ–Ω–∏–µ \n7. –§–∏–∑–∏–∫–∞ \n8. –ò–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞(—É—á–µ–±–Ω–∏–∫) \n9. –ò–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞(–º–µ—Ç–æ–¥–∏–∫–∞) \n10. –í–æ—Å–ø–∏—Ç–∞–Ω–∏–µ \n11. –≠–∫–æ–Ω–æ–º–∏–∫–∞ \n12. –ì–µ–æ–≥—Ä–∞—Ñ–∏—è \n13. –í—Å–µ–º–∏—Ä–Ω–∞—è –ò—Å—Ç–æ—Ä–∏—è \n14. –•–∏–º–∏—è \n15. –û–ö–ü(–û—Å–Ω–æ–≤—ã –ö–æ–Ω—Å—Ç–∏—Ç—É—Ü–∏–æ–Ω–Ω–æ–≥–æ –ü—Ä–∞–≤–∞) \n16. –ò–ù–ù(–ò–¥–µ—è –ù–∞—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–π –ù–µ–∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏) \n17. –£–∑–±–µ–∫—Å–∫–∏–π –Ø–∑—ã–∫ \n18. –ò—Å—Ç–æ—Ä–∏—è –£–∑–±–µ–∫–∏—Å—Ç–∞–Ω–∞ \n19. –†—É—Å—Å–∫–∏–π –Ø–∑—ã–∫ \n20. –¢–µ—Ö–Ω–æ–ª–æ–≥–∏—è\n\nüìö <b>–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∫–Ω–∏–≥–∏:</b>\n- Mindset\n- 4000 Essential Words 4`, Markup.inlineKeyboard(
            [
                [Markup.button.callback('1', 'b1'), Markup.button.callback('2', 'b2'), Markup.button.callback('3', 'b3'), Markup.button.callback('4', 'b4'), Markup.button.callback('5', 'b5')],
                [Markup.button.callback('6', 'b6'), Markup.button.callback('7', 'b7'), Markup.button.callback('8', 'b8'), Markup.button.callback('9', 'b9'), Markup.button.callback('10', 'b10')],
                [Markup.button.callback('11', 'b11'), Markup.button.callback('12', 'b12'), Markup.button.callback('13', 'b13'), Markup.button.callback('14', 'b14'), Markup.button.callback('15', 'b15')],
                [Markup.button.callback('16', 'b16'), Markup.button.callback('17', 'b17'), Markup.button.callback('18', 'b18'), Markup.button.callback('19', 'b19'), Markup.button.callback('20', 'b20')],
                [Markup.button.callback('MINDSET', 'MS')],
                [Markup.button.callback('4000EW', 'FF')]
            ]
        ))
    } catch(e) {
        console.error(e);
    }
});


bot.on('document', async ctx => console.log(ctx.message.document))

/* act */

bot.action('b1', async (ctx) => {
    try {
        await ctx.reply(`–î–æ–∫—É–º–µ–Ω—Ç –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è, –ø–æ–¥–æ–∂–¥–∏—Ç–µ –Ω–µ–º–Ω–æ–≥–æ...`)
        await ctx.replyWithDocument({
            source: './books/–õ–∏—Ç–µ—Ä–∞—Ç—É—Ä–∞-1.pdf',
        })
        await ctx.answerCbQuery('–î–æ–∫—É–º–µ–Ω—Ç –¥–æ—Å—Ç–∞–≤–ª–µ–Ω', {show_alert: false})
    } catch(e) {
        console.error(e);
    }
    
})

bot.action('b2', async (ctx) => {
    try {
        await ctx.reply(`–î–æ–∫—É–º–µ–Ω—Ç –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è, –ø–æ–¥–æ–∂–¥–∏—Ç–µ –Ω–µ–º–Ω–æ–≥–æ...`)
        await ctx.replyWithDocument({
            source: './books/–õ–∏—Ç–µ—Ä–∞—Ç—É—Ä–∞-2.pdf'
        })
        await ctx.answerCbQuery('–î–æ–∫—É–º–µ–Ω—Ç –¥–æ—Å—Ç–∞–≤–ª–µ–Ω', {show_alert: false})
    } catch(e) {
        console.error(e);
    }
})

bot.action('b3', async (ctx) => {
    try {
        await ctx.reply(`–î–æ–∫—É–º–µ–Ω—Ç –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è, –ø–æ–¥–æ–∂–¥–∏—Ç–µ –Ω–µ–º–Ω–æ–≥–æ...`)
        await ctx.replyWithDocument({
            source: './books/–ê–ª–≥–µ–±—Ä–∞.pdf',
        }) 
        await ctx.answerCbQuery('–î–æ–∫—É–º–µ–Ω—Ç –¥–æ—Å—Ç–∞–≤–ª–µ–Ω', {show_alert: false})
    } catch(e) {
        console.error(e);
    }
})

bot.action('b4', async (ctx) => {
    try {
        await ctx.reply(`–î–æ–∫—É–º–µ–Ω—Ç –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è, –ø–æ–¥–æ–∂–¥–∏—Ç–µ –Ω–µ–º–Ω–æ–≥–æ...`)
        await ctx.replyWithDocument({
            source: './books/–ì–µ–æ–º–µ—Ç—Ä–∏—è.pdf',
        }) 
        await ctx.answerCbQuery('–î–æ–∫—É–º–µ–Ω—Ç –¥–æ—Å—Ç–∞–≤–ª–µ–Ω', {show_alert: false})
    } catch(e) {
        console.error(e);
    }
})

bot.action('b5', async (ctx) => {
    try {
        await ctx.reply(`–î–æ–∫—É–º–µ–Ω—Ç –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è, –ø–æ–¥–æ–∂–¥–∏—Ç–µ –Ω–µ–º–Ω–æ–≥–æ...`)
        await ctx.replyWithDocument({
            source: './books/–ë–∏–æ–ª–æ–≥–∏—è.pdf',
        })
        await ctx.answerCbQuery('–î–æ–∫—É–º–µ–Ω—Ç –¥–æ—Å—Ç–∞–≤–ª–µ–Ω', {show_alert: false})
    } catch(e) {
        console.error(e);
    }
})

bot.action('b6', async (ctx) => {
    try {
        await ctx.reply(`–î–æ–∫—É–º–µ–Ω—Ç –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è, –ø–æ–¥–æ–∂–¥–∏—Ç–µ –Ω–µ–º–Ω–æ–≥–æ...`)
        await ctx.replyWithDocument({
            source: './books/–ß–µ—Ä—á–µ–Ω–∏–µ.pdf',
        })
        await ctx.answerCbQuery('–î–æ–∫—É–º–µ–Ω—Ç –¥–æ—Å—Ç–∞–≤–ª–µ–Ω', {show_alert: false})
    } catch(e) {
        console.error(e);
    }
})

bot.action('b7', async (ctx) => {
    try {
        await ctx.reply(`–î–æ–∫—É–º–µ–Ω—Ç –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è, –ø–æ–¥–æ–∂–¥–∏—Ç–µ –Ω–µ–º–Ω–æ–≥–æ...`)
        await ctx.replyWithDocument({
            source: './books/–§–∏–∑–∏–∫–∞.pdf',
        })
        await ctx.answerCbQuery('–î–æ–∫—É–º–µ–Ω—Ç –¥–æ—Å—Ç–∞–≤–ª–µ–Ω', {show_alert: false})
    } catch(e) {
        console.error(e);
    }
})

bot.action('b8', async (ctx) => {
    try {
        await ctx.reply(`–î–æ–∫—É–º–µ–Ω—Ç –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è, –ø–æ–¥–æ–∂–¥–∏—Ç–µ –Ω–µ–º–Ω–æ–≥–æ...`)
        await ctx.replyWithDocument({
            source: './books/–ò–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞(—É—á–µ–±–Ω–∏–∫).pdf',
        })
        await ctx.answerCbQuery('–î–æ–∫—É–º–µ–Ω—Ç –¥–æ—Å—Ç–∞–≤–ª–µ–Ω', {show_alert: false})
    } catch(e) {
        console.error(e);
    }
})

bot.action('b9', async (ctx) => {
    try {
        await ctx.reply(`–î–æ–∫—É–º–µ–Ω—Ç –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è, –ø–æ–¥–æ–∂–¥–∏—Ç–µ –Ω–µ–º–Ω–æ–≥–æ...`)
        await ctx.replyWithDocument({
            source: './books/–ò–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞(–º–µ—Ç–æ–¥–∏–∫–∞).pdf',
        })
        await ctx.answerCbQuery('–î–æ–∫—É–º–µ–Ω—Ç –¥–æ—Å—Ç–∞–≤–ª–µ–Ω', {show_alert: false})
    } catch(e) {
        console.error(e);
    }
})

bot.action('b10', async (ctx) => {
    try {
        await ctx.reply(`–î–æ–∫—É–º–µ–Ω—Ç –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è, –ø–æ–¥–æ–∂–¥–∏—Ç–µ –Ω–µ–º–Ω–æ–≥–æ...`)
        await ctx.replyWithDocument({
            source: './books/–í–æ—Å–ø–∏—Ç–∞–Ω–∏–µ.pdf',
        })
        await ctx.answerCbQuery('–î–æ–∫—É–º–µ–Ω—Ç –¥–æ—Å—Ç–∞–≤–ª–µ–Ω', {show_alert: false})
    } catch(e) {
        console.error(e);
    }
})

bot.action('b11', async (ctx) => {
    try {
        await ctx.reply(`–î–æ–∫—É–º–µ–Ω—Ç –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è, –ø–æ–¥–æ–∂–¥–∏—Ç–µ –Ω–µ–º–Ω–æ–≥–æ...`)
        await ctx.replyWithDocument({
            source: './books/–≠–∫–æ–Ω–æ–º–∏–∫–∞.pdf',
        })
        await ctx.answerCbQuery('–î–æ–∫—É–º–µ–Ω—Ç –¥–æ—Å—Ç–∞–≤–ª–µ–Ω', {show_alert: false})
    } catch(e) {
        console.error(e);
    }
})

bot.action('b12', async (ctx) => {
    try {
        await ctx.reply(`–î–æ–∫—É–º–µ–Ω—Ç –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è, –ø–æ–¥–æ–∂–¥–∏—Ç–µ –Ω–µ–º–Ω–æ–≥–æ...`)
        await ctx.replyWithDocument({
            source: './books/–ì–µ–æ–≥—Ä–∞—Ñ–∏—è.pdf',
        })
        await ctx.answerCbQuery('–î–æ–∫—É–º–µ–Ω—Ç –¥–æ—Å—Ç–∞–≤–ª–µ–Ω', {show_alert: false})
    } catch(e) {
        console.error(e);
    }
})

bot.action('b13', async (ctx) => {
    try {
        await ctx.reply(`–î–æ–∫—É–º–µ–Ω—Ç –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è, –ø–æ–¥–æ–∂–¥–∏—Ç–µ –Ω–µ–º–Ω–æ–≥–æ...`)
        await ctx.replyWithDocument({
            source: './books/–ò—Å—Ç–æ—Ä–∏—è(–í—Å–µ–º–∏—Ä–Ω–∞—è).pdf',
        })
        await ctx.answerCbQuery('–î–æ–∫—É–º–µ–Ω—Ç –¥–æ—Å—Ç–∞–≤–ª–µ–Ω', {show_alert: false})
    } catch(e) {
        console.error(e);
    }
})

bot.action('b14', async (ctx) => {
    try {
        await ctx.reply(`–î–æ–∫—É–º–µ–Ω—Ç –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è, –ø–æ–¥–æ–∂–¥–∏—Ç–µ –Ω–µ–º–Ω–æ–≥–æ...`)
        await ctx.replyWithDocument({
            source: './books/–•–∏–º–∏—è.pdf',
        })
        await ctx.answerCbQuery('–î–æ–∫—É–º–µ–Ω—Ç –¥–æ—Å—Ç–∞–≤–ª–µ–Ω', {show_alert: false})
    } catch(e) {
        console.error(e);
    }
})

bot.action('b15', async (ctx) => {
    try {
        await ctx.reply(`–î–æ–∫—É–º–µ–Ω—Ç –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è, –ø–æ–¥–æ–∂–¥–∏—Ç–µ –Ω–µ–º–Ω–æ–≥–æ...`)
        await ctx.replyWithDocument({
            source: './books/–û–ö–ü.pdf',
        })
        await ctx.answerCbQuery('–î–æ–∫—É–º–µ–Ω—Ç –¥–æ—Å—Ç–∞–≤–ª–µ–Ω', {show_alert: false})
    } catch(e) {
        console.error(e);
    }
})

bot.action('b16', async (ctx) => {
    try {
        await ctx.reply(`–î–æ–∫—É–º–µ–Ω—Ç –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è, –ø–æ–¥–æ–∂–¥–∏—Ç–µ –Ω–µ–º–Ω–æ–≥–æ...`)
        await ctx.replyWithDocument({
            source: './books/–ò–ù–ù.pdf',
        })
        await ctx.answerCbQuery('–î–æ–∫—É–º–µ–Ω—Ç –¥–æ—Å—Ç–∞–≤–ª–µ–Ω', {show_alert: false})
    } catch(e) {
        console.error(e);
    }
})

bot.action('b17', async (ctx) => {
    try {
        await ctx.reply(`–î–æ–∫—É–º–µ–Ω—Ç –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è, –ø–æ–¥–æ–∂–¥–∏—Ç–µ –Ω–µ–º–Ω–æ–≥–æ...`)
        await ctx.replyWithDocument({
            source: './books/–£–∑–±–µ–∫—Å–∫–∏–π_–Ø–∑—ã–∫.pdf',
        })
        await ctx.answerCbQuery('–î–æ–∫—É–º–µ–Ω—Ç –¥–æ—Å—Ç–∞–≤–ª–µ–Ω', {show_alert: false})
    } catch(e) {
        console.error(e);
    }
})

bot.action('b18', async (ctx) => {
    try {
        await ctx.reply(`–î–æ–∫—É–º–µ–Ω—Ç –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è, –ø–æ–¥–æ–∂–¥–∏—Ç–µ –Ω–µ–º–Ω–æ–≥–æ...`)
        await ctx.replyWithDocument({
            source: './books/–ò—Å—Ç–æ—Ä–∏—è(–£–∑–±–µ–∫–∏—Å—Ç–∞–Ω).pdf',
        })
        await ctx.answerCbQuery('–î–æ–∫—É–º–µ–Ω—Ç –¥–æ—Å—Ç–∞–≤–ª–µ–Ω', {show_alert: false})
    } catch(e) {
        console.error(e);
    }
})

bot.action('b19', async (ctx) => {
    try {
        await ctx.reply(`–î–æ–∫—É–º–µ–Ω—Ç –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è, –ø–æ–¥–æ–∂–¥–∏—Ç–µ –Ω–µ–º–Ω–æ–≥–æ...`)
        await ctx.replyWithDocument({
            source: './books/–†—É—Å—Å–∫–∏–π_–Ø–∑—ã–∫.pdf',
        })
        await ctx.answerCbQuery('–î–æ–∫—É–º–µ–Ω—Ç –¥–æ—Å—Ç–∞–≤–ª–µ–Ω', {show_alert: false})
    } catch(e) {
        console.error(e);
    }
})

bot.action('b20', async (ctx) => {
    try {
        await ctx.reply(`–î–æ–∫—É–º–µ–Ω—Ç –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è, –ø–æ–¥–æ–∂–¥–∏—Ç–µ –Ω–µ–º–Ω–æ–≥–æ...`)
        await ctx.replyWithDocument({
            source: './books/–¢–µ—Ö–Ω–æ–ª–æ–≥–∏—è.pdf',
        })
        await ctx.answerCbQuery('–î–æ–∫—É–º–µ–Ω—Ç –¥–æ—Å—Ç–∞–≤–ª–µ–Ω', {show_alert: false})
    } catch(e) {
        console.error(e);
    }
})

bot.action('MS', async ctx => {
    try {
        await ctx.reply(`–î–æ–∫—É–º–µ–Ω—Ç –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è, –ø–æ–¥–æ–∂–¥–∏—Ç–µ –Ω–µ–º–Ω–æ–≥–æ...`)
        await ctx.replyWithDocument({
            source: './books/mindset.pdf',
        })
        await ctx.answerCbQuery('–î–æ–∫—É–º–µ–Ω—Ç –¥–æ—Å—Ç–∞–≤–ª–µ–Ω', {show_alert: false})
    } catch (e) {
        console.error(e);
    }
})
bot.action('FF', async ctx => {
    try {
        await ctx.reply(`–î–æ–∫—É–º–µ–Ω—Ç –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è, –ø–æ–¥–æ–∂–¥–∏—Ç–µ –Ω–µ–º–Ω–æ–≥–æ...`)
        await ctx.replyWithDocument({
            source: './books/4000.Essential.English.Words-4.pdf',
        })
        await ctx.answerCbQuery('–î–æ–∫—É–º–µ–Ω—Ç –¥–æ—Å—Ç–∞–≤–ª–µ–Ω', {show_alert: false})
    } catch (e) {
        console.error(e);
    }
})
/* act */
process.once('SIGINT', () => bot.stop('SIGINT'));
process.once('SIGTERM', () => bot.stop('SIGTERM'));